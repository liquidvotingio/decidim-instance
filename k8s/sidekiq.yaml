apiVersion: apps/v1
kind: Deployment
metadata:
  name: decidim-demo-sidekiq-deployment
  labels:
    app: decidim-demo
    tier: sidekiq
spec:
  replicas: 2
  selector:
    matchLabels:
      app: decidim-demo-sidekiq
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 34%
      maxUnavailable: 34%
  template:
    metadata:
      labels:
        app: decidim-demo-sidekiq
    spec:
      containers:
      - name: main
        image: ghcr.io/liquidvotingio/liquid-decidim-demo:latest
        imagePullPolicy: Always
        command: ["/usr/local/bundle/bin/bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
        env:
          - name: DB_HOST
            value: decidim-demo-postgres-svc.default.svc.cluster.local
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: decidim-demo-postgres-config
                key: postgres-dbname
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: decidim-demo-postgres-config
                key: postgres-username
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: decidim-demo-postgres-config
                key: postgres-password
          - name: DATABASE_URL
            value: postgres://$(DB_USER):$(DB_PASSWD)@$(DB_HOST):5432/$(DB_NAME)
          - name: REDIS_URL
            value: redis://decidim-demo-redis-svc.default.svc.cluster.local:6379/0
        resources:
          requests:
             cpu: "75m"
        securityContext:
          privileged: false
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      imagePullSecrets:
      - name: registry-secret
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
